<Window x:Class="ThreeL.Blob.Clients.Win.Windows.Chat"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helpers="clr-namespace:ThreeL.Blob.Clients.Win.Helpers"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        Icon="pack://application:,,,/HeadDisk;component/Icon.ico"
        xmlns:converts="clr-namespace:ThreeL.Blob.Clients.Win.Converts"
        xmlns:enum ="clr-namespace:ThreeL.Blob.Shared.Domain.Metadata.User;assembly=ThreeL.Blob.Shared.Domain"
        xmlns:local="clr-namespace:ThreeL.Blob.Clients.Win"
        mc:Ignorable="d"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None"
        ResizeMode="CanResize"
        Title="聊天界面" Height="550" MinWidth="350" Width="350">
    <Window.Resources>
        <converts:ValueHalfConverter x:Key="ValueHalfConverter"></converts:ValueHalfConverter>
        <converts:ValueHalfConverter_2 x:Key="ValueHalfConverter_2"></converts:ValueHalfConverter_2>
        <helpers:MessageDataTemplateSelector x:Key="MessageDataTemplateSelector"></helpers:MessageDataTemplateSelector>
        <helpers:ApplyMessageDataTemplateSelector x:Key="ApplyMessageDataTemplateSelector"></helpers:ApplyMessageDataTemplateSelector>
        <ContextMenu x:Key="chatmessagemenu" BorderThickness="0" Width="150" Padding="0" Cursor="Hand">
            <MenuItem Header="撤回" 
                      Command="{Binding WithdrawCommandAsync}"
                      Visibility="{Binding CanWithdraw,Converter={StaticResource Boolean2VisibilityConverter}}"
                      Padding="5 5" FontSize="14"></MenuItem>
            <MenuItem Header="下载" Visibility="{Binding CanDownload,Converter={StaticResource Boolean2VisibilityConverter}}"
                Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="14"></MenuItem>
            <MenuItem Header="下载并打开" 
                      Visibility="{Binding CanDownload,Converter={StaticResource Boolean2VisibilityConverter}}"
                Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="14"></MenuItem>
            <MenuItem Header="打开文件位置" 
                      Visibility="{Binding CanOpenLocalLocation,Converter={StaticResource Boolean2VisibilityConverter}}"
                      Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="14"></MenuItem>
            <MenuItem Header="转存" 
                      Visibility="{Binding CanSaveOnline,Converter={StaticResource Boolean2VisibilityConverter}}"
                      Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="14"></MenuItem>
        </ContextMenu>

        <DataTemplate x:Key="loadrecords">
            <Button Cursor="Hand"
                    IsEnabled="{Binding IsDisabled,Converter={StaticResource Boolean2BooleanReConverter}}"
                    VerticalAlignment="Top"
                    VerticalContentAlignment="Top"
                    BorderThickness="0"
                    Foreground="Blue"
                    Command="{Binding FetchHistoryChatRecordsCommand}"
                    Opacity="0.8"
                    HorizontalAlignment="Center"
                    FontSize="12">
                <Button.Content>
                    <TextBlock Text="加载历史聊天消息"
                               IsEnabled="{Binding IsDisabled,Converter={StaticResource Boolean2BooleanReConverter}}"
                               TextDecorations="Baseline">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="#999"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Foreground" Value="Blue"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Button.Content>
                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                        <behaviors:InvokeCommandAction Command="{Binding FetchHistoryChatRecordsCommand}"
                                   ></behaviors:InvokeCommandAction>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
            </Button>
        </DataTemplate>

        <DataTemplate x:Key="time">
            <TextBox Text="{Binding Time}"
                     IsReadOnly="True"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Top"
                     BorderThickness="0"
                     Foreground="#555"
                     Opacity="0.8"
                     Background="#eee"
                     HorizontalAlignment="Center"
                     FontSize="12">
            </TextBox>
        </DataTemplate>

        <DataTemplate x:Key="withdraw">
            <TextBox Text="{Binding WithdrawMessage,Mode=OneWay}"
                     IsReadOnly="True"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     VerticalAlignment="Top"
                     VerticalContentAlignment="Top"
                     BorderThickness="0"
                     Foreground="#555"
                     Opacity="0.8"
                     Background="#eee"
                     HorizontalAlignment="Center"
                     FontSize="12">
            </TextBox>
        </DataTemplate>

        <DataTemplate x:Key="txtSender">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Label Padding="0" Background="Transparent" BorderThickness="0"
                           Visibility="{Binding SendFaild,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Boolean2VisibilityConverter}}"
                           Cursor="Hand"
                           Margin=" 0 0 5 0">
                        <Path Data="{StaticResource ErrorGeometry}"
                              Height="18" Width="18" Fill="Red"
                              Stretch="Uniform">
                        </Path>
                    </Label>
                    <TextBox Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"
                             MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap"
                             Background="#eee"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             IsReadOnly="True"
                             VerticalContentAlignment="Top"
                             BorderThickness="0"
                             Foreground="#555"
                             HorizontalAlignment="Right"
                             FontSize="14">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="fileSender">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Border MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Right"
                            Cursor="Hand"
                            ToolTip="{Binding FileName}"
                            CornerRadius="5">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                <behaviors:InvokeCommandAction Command="{Binding LeftButtonClickCommandAsync}"
                                                           ></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="2">
                                <TextBlock Text="{Binding FileName}" 
                                           TextWrapping="Wrap"
                                           Margin="0 0 0 6"
                                           VerticalAlignment="Center" FontSize="12"
                                           Foreground="#555"/>
                                <TextBlock Text="{Binding SizeText}" Foreground="#888" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            </StackPanel>
                            <Image Source="{Binding Icon}" Grid.Column="0">
                            </Image>
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#eee"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="#ddd"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="folderSender">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Border MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                    HorizontalAlignment="Right"
                    Cursor="Hand"
                    ToolTip="{Binding FileName}"
                    CornerRadius="5">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                <behaviors:InvokeCommandAction Command="{Binding LeftButtonClickCommandAsync}"
                                                   ></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="2">
                                <TextBlock Text="{Binding FileName}" 
                                   TextWrapping="Wrap"
                                   VerticalAlignment="Center" FontSize="12"
                                   Foreground="#555"/>
                            </StackPanel>
                            <Image Source="{Binding Icon}" Grid.Column="0">
                            </Image>
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#eee"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="#ddd"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="txtReceiver">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <TextBox Text="{Binding Text,UpdateSourceTrigger=PropertyChanged}"
                             MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap"
                             Background="#eee"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             IsReadOnly="True"
                             VerticalContentAlignment="Top"
                             BorderThickness="0"
                             Foreground="#555"
                             HorizontalAlignment="Left"
                             FontSize="14">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="fileReceiver">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <Border MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Left"
                            Cursor="Hand"
                            ToolTip="{Binding FileName}"
                            CornerRadius="5">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                <behaviors:InvokeCommandAction Command="{Binding LeftButtonClickCommandAsync}"
                                                           ></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" Margin="5">
                                <TextBlock Text="{Binding FileName}" Foreground="#555" 
                                           Margin="0 0 0 6"
                                           VerticalAlignment="Center" TextWrapping="Wrap" FontSize="12"/>
                                <TextBlock Text="{Binding SizeText}" Foreground="#888" FontSize="11" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </StackPanel>
                            <Image Source="{Binding Icon}" Grid.Column="1">
                            </Image>
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#eee"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="#ddd"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="folderReceiver">
            <Grid Name="ctx" ContextMenu="{StaticResource chatmessagemenu}">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                    <Border MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                     HorizontalAlignment="Left"
                     Cursor="Hand"
                     ToolTip="{Binding FileName}"
                     CornerRadius="5">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                <behaviors:InvokeCommandAction Command="{Binding LeftButtonClickCommandAsync}"
                                                    ></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="50"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" Margin="5">
                                <TextBlock Text="{Binding FileName}" Foreground="#555" 
                                    VerticalAlignment="Center" TextWrapping="Wrap" FontSize="12"/>
                            </StackPanel>
                            <Image Source="{Binding Icon}" Grid.Column="1">
                            </Image>
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#eee"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="#ddd"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <!--申请-->
        <DataTemplate x:Key="addfriend">
            <Grid Height="35">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"></ColumnDefinition>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding Desc,Mode=OneWay}" VerticalAlignment="Center" FontSize="13"></TextBlock>
                <TextBlock Text="{Binding CreateDate}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>

                <StackPanel Orientation="Horizontal" Grid.Column="2">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                            <Condition Binding="{Binding FromSelf}" Value="True"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                            <Condition Binding="{Binding FromSelf}" Value="False"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Agreed}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Rejected}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <Button Content="同意" Width="70"
                                Style="{StaticResource ButtonPrimary}"
                                Command="{Binding AcceptApplyCommandAsync}" Height="30" Cursor="Hand">
                        </Button>
                        <Button Content="拒绝" Width="50" Margin="5 0 0 0" 
                                Cursor="Hand"
                                Style="{StaticResource ButtonDanger}"
                                Command="{Binding RejectApplyCommandAsync}">
                        </Button>
                    </StackPanel>

                    <TextBlock Text="待对方处理" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                            <Condition Binding="{Binding FromSelf}" Value="True"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                            <Condition Binding="{Binding FromSelf}" Value="False"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Agreed}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Rejected}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Text="已同意" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Agreed}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Rejected}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock Text="已拒绝" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Rejected}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Unhandled}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Status}" Value="{x:Static enum:FriendApplyStatus.Agreed}"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="adddate">
            <Grid Background="#ccc" Height="45">
                <Grid>
                    <TextBlock Text="{Binding CreateDate,UpdateSourceTrigger=PropertyChanged}"
                               FontSize="18"
                               VerticalAlignment="Center"
                               FontWeight="Bold"
                               />
                </Grid>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadCommandAsync}"></behaviors:InvokeCommandAction>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="3"/>
    </WindowChrome.WindowChrome>
    <Grid>
        <Border Margin="3" Background="#eee" CornerRadius="1" BorderThickness="0">
            <Border.Effect>
                <DropShadowEffect Direction="0" ShadowDepth="0" BlurRadius="10"
                          Opacity="0.25" Color="#FF5B5B5B"></DropShadowEffect>
            </Border.Effect>
        </Border>
        <Grid Margin="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="65"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border MouseMove="Border_MouseMove"
                    Grid.Column="0" Grid.ColumnSpan="2"
                    Background="#ddd" BorderThickness="0">
                <Grid>
                    <Label Width="30" Height="30" Margin="5 0 0 0" Padding="0" Background="Transparent" HorizontalAlignment="Left"
                       ToolTip="头盘">
                        <Path Data="{StaticResource icon}"
                          Width="25" Height="20"
                          Stretch="Fill"
                          Fill="{StaticResource PrimaryBrush}"
                          ></Path>
                    </Label>
                    <TextBlock Text="头聊" FontFamily="Tahoma" FontSize="16" VerticalAlignment="Center" Margin="40 0 0 0" 
                           Foreground="#555" FontWeight="Bold"></TextBlock>
                    <Label BorderThickness="0"
                       Cursor="Hand"
                       ToolTip="最小化"
                       Margin="0 0 35 0"
                       Background="Transparent"
                       HorizontalAlignment="Right" 
                       MouseLeftButtonDown="Label_MouseLeftButtonDown">
                        <Path Data="{StaticResource WindowMinGeometry}" 
                          SnapsToDevicePixels="True"
                          Height="15"
                          Width="15"
                          Stroke="{StaticResource PrimaryBrush}" Stretch="Uniform" 
                          Fill="{StaticResource PrimaryBrush}"/>
                    </Label>
                    <Label BorderThickness="0"
                       Cursor="Hand"
                       ToolTip="关闭到托盘"
                       Margin="0 0 0 0"
                       Background="Transparent"
                       HorizontalAlignment="Right" MouseLeftButtonDown="Label_MouseLeftButtonDown_1">
                        <Path Data="{StaticResource CloseGeometry}" 
                          SnapsToDevicePixels="True"
                          Height="15"
                          Stroke="{StaticResource PrimaryBrush}" Stretch="Uniform" 
                          Fill="{StaticResource PrimaryBrush}"/>
                    </Label>
                </Grid>
            </Border>

            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="35"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <hc:SearchBar Style="{StaticResource SearchBarExtend}" 
                                  Margin="3,3,3,3"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  hc:InfoElement.Placeholder="搜索好友"
                                  Text="{Binding Keyword,UpdateSourceTrigger=PropertyChanged}">
                        <hc:SearchBar.InputBindings>
                            <KeyBinding Command="{Binding SearchUsersCommandAsync}" Key="Enter"/>
                        </hc:SearchBar.InputBindings>
                    </hc:SearchBar>

                    <Button Width="25" Height="25" Grid.Column="2"
                            BorderThickness="0"
                            Cursor="Hand"
                            Name="tip"
                            ToolTip="通知"
                            Command="{Binding OpenApplyCommand}"
                            Padding="0" Background="Transparent">
                        <Path Data="{StaticResource tip}"
                              Stretch="Uniform"
                              Margin="3"
                              Cursor="Hand"
                              Fill="{StaticResource PrimaryBrush}"></Path>
                    </Button>

                    <Popup x:Name="pop" PopupAnimation="Fade"
                           PlacementTarget="{Binding ElementName=tip}"
                           Style="{x:Null}"
                           MaxHeight="450"
                           Width="480"
                           Placement="Bottom" AllowsTransparency="True" StaysOpen="False" IsOpen="{Binding OpenApply}">
                        <hc:Card Background="#fff" BorderBrush="#eee" BorderThickness="2">
                            <StackPanel>
                                <Button Content="刷新" Width="100" 
                                        Command="{Binding RefreshApplysCommandAsync}"
                                        Cursor="Hand" Height="30" HorizontalAlignment="Left" Margin="10 5 5 5"></Button>
                                <ScrollViewer RequestBringIntoView="ScrollViewer_RequestBringIntoView" 
                                          Margin="1"
                                          BorderThickness="0"
                                          Background="Transparent">
                                    <ListBox ScrollViewer.CanContentScroll="False"
                                         Padding="0"
                                         AllowDrop="True"
                                         hc:BorderElement.CornerRadius="0"
                                         ScrollViewer.IsDeferredScrollingEnabled="True"
                                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                                         PreviewMouseWheel="ListView_PreviewMouseWheel"
                                         Background="Transparent"
                                         ItemsSource="{Binding Applys,UpdateSourceTrigger=PropertyChanged}"
                                         ItemTemplateSelector="{StaticResource ApplyMessageDataTemplateSelector}"
                                         BorderThickness="0" BorderBrush="Transparent">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical"></StackPanel>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>

                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="Transparent"></Setter>
                                                        <Setter Property="Foreground" Value="Black"></Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="False">
                                                        <Setter Property="Background" Value="Transparent"></Setter>
                                                        <Setter Property="Foreground" Value="Black"></Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                </ScrollViewer>
                            </StackPanel>
                        </hc:Card>
                    </Popup>
                    <Ellipse Height="10" Width="10" Fill="Red" Grid.Column="1"
                             Margin="10 0 0 20"></Ellipse>
                </Grid>
                <Grid Grid.Row="1" Visibility="{Binding Searching,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <hc:Card Grid.Column="0" Margin="3">
                        <ScrollViewer RequestBringIntoView="ScrollViewer_RequestBringIntoView" Background="Transparent">
                            <ListBox ScrollViewer.CanContentScroll="False"
                                     Padding="0"
                                     AllowDrop="True"
                                     hc:BorderElement.CornerRadius="0"
                                     ScrollViewer.IsDeferredScrollingEnabled="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     PreviewMouseWheel="ListView_PreviewMouseWheel"
                                     Background="Transparent"
                                     ItemsSource="{Binding Relations,UpdateSourceTrigger=PropertyChanged}"
                                     SelectedItem="{Binding Relation,UpdateSourceTrigger=PropertyChanged}"
                                     BorderThickness="0" BorderBrush="Transparent">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="SelectionChanged">
                                        <behaviors:InvokeCommandAction Command="{Binding ChangeRelationCommandAsync}"></behaviors:InvokeCommandAction>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Height" Value="90" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border Cursor="Hand"
                                                            Padding="0"
                                                            CornerRadius="0"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            Height="{TemplateBinding Height}"
                                                            Width="{TemplateBinding Width}"
                                                            Name="fileObjectDetail"
                                                            Background="Transparent">
                                                        <StackPanel Orientation="Vertical">
                                                            <hc:Gravatar Id="{Binding UserName}" 
                                                                         Visibility="{Binding Icon,Converter={StaticResource Object2VisibilityReConverter}}" 
                                                                         Margin="0 5 0 0" Background="#eee" Style="{StaticResource GravatarCircle}" Width="50" Height="50">
                                                            </hc:Gravatar>

                                                            <hc:Gravatar Visibility="{Binding Icon,Converter={StaticResource Object2VisibilityConverter}}" 
                                                                         Source="{Binding Icon}"
                                                                         Margin="0 5 0 0" 
                                                                         Background="#eee" 
                                                                         Style="{StaticResource GravatarCircle}" Width="50" Height="50">
                                                            </hc:Gravatar>
                                                            <TextBlock Text="{Binding UserName}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                       FontSize="13"
                                                                       Foreground="{TemplateBinding Foreground}"
                                                                       Margin="0 10 0 0"
                                                                       ></TextBlock>
                                                        </StackPanel>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"></Setter>
                                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"></Setter>
                                                <Setter Property="BorderThickness" Value="1"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter Property="Foreground" Value="#555"></Setter>
                                                <Setter Property="BorderBrush" Value="#ccc"></Setter>
                                                <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </ScrollViewer>
                    </hc:Card>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="45"></RowDefinition>
                        </Grid.RowDefinitions>
                        <hc:Card hc:BorderElement.CornerRadius="10 0 0 10" Margin="-1 3 3 0" Grid.Row="0">
                            <TextBlock Text="{Binding Relation.UserName}" 
                                       VerticalAlignment="Center"
                                       FontSize="16" Margin="5 4" Foreground="#555"></TextBlock>
                        </hc:Card>
                        <ScrollViewer helpers:ScrollViewerHelper.AlwaysScrollToEnd="True" 
                                      Margin="0 3 3 3"
                                      Name="chatScrollViewer"
                                      Grid.Row="1"
                                      BorderThickness="0"
                                      Background="#fff"
                                      RequestBringIntoView="ScrollViewer_RequestBringIntoView">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="ScrollChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding ChatScrollChangeCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                            <ListBox ItemsSource="{Binding Relation.Messages,UpdateSourceTrigger=PropertyChanged}"
                                     VirtualizingPanel.VirtualizationMode="Recycling"
                                     VirtualizingPanel.IsVirtualizing="True"
                                     UseLayoutRounding="True"
                                     ScrollViewer.CanContentScroll="False"
                                     ScrollViewer.IsDeferredScrollingEnabled="True"
                                     PreviewMouseWheel="ListView_PreviewMouseWheel"
                                     AllowDrop="True"
                                     ItemTemplateSelector="{StaticResource MessageDataTemplateSelector}"
                                     TextOptions.TextFormattingMode="Display"
                                     BorderThickness="0" Background="Transparent">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="Drop">
                                        <behaviors:InvokeCommandAction Command="{Binding DropItemsOnChatCommandAsync}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Vertical"></VirtualizingStackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource ClockListBoxItemStyle}">
                                        <Setter Property="Margin" Value="0 5"></Setter>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Background" Value="Transparent"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </ScrollViewer>
                        <Grid Grid.Row="2" Margin="0 0 0 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding TextMessage,UpdateSourceTrigger=PropertyChanged}" FontSize="12" 
                                     AcceptsReturn="True"
                                     VerticalContentAlignment="Top"
                                     TextWrapping="Wrap"
                                     BorderThickness="0"
                                     Style="{StaticResource TextBoxExtend}"
                                     hc:InfoElement.Placeholder="输入发送的消息"
                                     MinWidth="200">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding SendTextMessageCommandAsync}" Key="Enter"/>
                                </TextBox.InputBindings>
                            </TextBox>
                            <Button Width="50" Cursor="Hand" Grid.Column="1" Margin="5" Height="50" Style="{StaticResource ButtonPrimary}" 
                                    Command="{Binding SendTextMessageCommandAsync}"
                                    Content="发送"></Button>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Visibility="{Binding Searching,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Boolean2VisibilityConverter}}">
                    <hc:Card Grid.Column="0" Margin="3">
                        <ScrollViewer RequestBringIntoView="ScrollViewer_RequestBringIntoView" Background="Transparent">
                            <ListBox ScrollViewer.CanContentScroll="False"
                                     Padding="0"
                                     AllowDrop="True"
                                     hc:BorderElement.CornerRadius="0"
                                     ScrollViewer.IsDeferredScrollingEnabled="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     PreviewMouseWheel="ListView_PreviewMouseWheel"
                                     Background="Transparent"
                                     ItemsSource="{Binding UnRelations,UpdateSourceTrigger=PropertyChanged}"
                                     BorderThickness="0" BorderBrush="Transparent">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Foreground" Value="Black" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Height" Value="55" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border Cursor="Hand"
                                                            Padding="0"
                                                            CornerRadius="0"
                                                            BorderThickness="0 0 0 1"
                                                            BorderBrush="#eee"
                                                            Height="{TemplateBinding Height}"
                                                            Background="{TemplateBinding Background}"
                                                            Width="{TemplateBinding Width}"
                                                            Name="fileObjectDetail">
                                                        <Grid>
                                                            <StackPanel Orientation="Horizontal">
                                                                <hc:Gravatar Id="{Binding UserName}" 
                                                                         Visibility="{Binding Icon,Converter={StaticResource Object2VisibilityReConverter}}" 
                                                                         Margin="10 0 0 0" Background="#eee" Style="{StaticResource GravatarCircle}" Width="50" Height="50">
                                                                </hc:Gravatar>

                                                                <hc:Gravatar Visibility="{Binding Icon,Converter={StaticResource Object2VisibilityConverter}}" 
                                                                         Source="{Binding Icon}"
                                                                         Margin="10 0 0 0" 
                                                                         Background="#eee" 
                                                                         Style="{StaticResource GravatarCircle}" Width="50" Height="50">
                                                                </hc:Gravatar>
                                                                <TextBlock Text="{Binding UserName}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                       FontSize="15"
                                                                       Foreground="{TemplateBinding Foreground}"
                                                                       Margin="5 0 0 0"></TextBlock>
                                                            </StackPanel>
                                                            <Button Style="{StaticResource ButtonPrimary}" 
                                                                    HorizontalAlignment="Right"
                                                                    IsEnabled="{Binding CanAdd,UpdateSourceTrigger=PropertyChanged}"
                                                                    Command="{Binding AddRelationCommandAsync}"
                                                                    Content="添加好友" Cursor="Hand" Margin="0 0 10 0"></Button>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#ddd"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Background" Value="Transparent"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </ScrollViewer>
                    </hc:Card>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>