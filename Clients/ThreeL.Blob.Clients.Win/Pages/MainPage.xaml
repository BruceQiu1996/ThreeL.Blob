<Page x:Class="ThreeL.Blob.Clients.Win.Pages.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:convert="clr-namespace:ThreeL.Blob.Clients.Win.Converts"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      mc:Ignorable="d" 
      MouseLeftButtonDown="window_MouseDown"
      FontFamily="微软雅黑"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="MainPage">
    <Page.Resources>
        <convert:UtcDateTimeToStringConverter x:Key="UtcDateTimeToStringConverter"></convert:UtcDateTimeToStringConverter>
        <ContextMenu x:Key="fileitemmenu" BorderThickness="0" Width="180" Padding="0" Cursor="Hand">
            <MenuItem Header="下载" 
                      Command="{Binding DownloadCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="全选" 
                      Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="全不选" 
                      Command="{Binding SelectNoCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="删除" 
                      Command="{Binding DeleteCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="重命名" 
                      Command="{Binding RenameCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="移动" 
                      Command="{Binding MoveCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="发送到聊天" 
                      Command="{Binding SendToChatCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="压缩文件/文件夹" 
                      Command="{Binding CompressCommand}" Padding="5 5" FontSize="15"></MenuItem>
        </ContextMenu>
        <ContextMenu x:Key="filemenu" BorderThickness="0" Width="150" Padding="0" Cursor="Hand">
            <MenuItem Header="新建文件夹" 
                      Command="{Binding NewFolderCommandAsync}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="上传文件" 
                      Command="{Binding UploadCommandAsync}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="刷新" 
                      Command="{Binding RefreshCommandAsync}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="全选" 
                      Command="{Binding SelectAllCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="全不选" 
                      Command="{Binding SelectNoCommand}" Padding="5 5" FontSize="15"></MenuItem>
            <MenuItem Header="压缩选中文件/文件夹" 
                      Command="{Binding CompressItemsCommandAsync}" Padding="5 5" FontSize="15"></MenuItem>
        </ContextMenu>
    </Page.Resources>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadCommandAsync}"></behaviors:InvokeCommandAction>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid Focusable="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="45"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBox Width="0" Name="focusHold">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="GotFocus">
                    <behaviors:InvokeCommandAction Command="{Binding GridGotFocusCommand}"></behaviors:InvokeCommandAction>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </TextBox>
        <Border Grid.Row="0" BorderThickness="0 0 0 1" BorderBrush="#ccc">
            <StackPanel Orientation="Horizontal" Margin="2 0 0 0">
                <Button Content="立即上传" FontSize="13" Command="{Binding UploadCommandAsync}" Style="{StaticResource ButtonPrimary}" Cursor="Hand"></Button>
                <Button Content="新建文件夹" FontSize="13" Command="{Binding NewFolderCommand}" Margin="5 0 0 0" Style="{StaticResource ButtonWarning}" Cursor="Hand"></Button>

                <hc:SearchBar Style="{StaticResource SearchBarExtend}" hc:InfoElement.Placeholder="搜索文件"
                              Height="30" Width="240"
                              Margin="10 0  0 0"
                              Text="{Binding Keyword,UpdateSourceTrigger=PropertyChanged}"
                              Command="{Binding SearchFileByKeywordCommand}"
                              HorizontalAlignment="Right"></hc:SearchBar>

                <ComboBox Width="180" 
                          Style="{StaticResource ComboBoxExtend}"
                          hc:TitleElement.TitlePlacement="Left"
                          hc:InfoElement.Placeholder="排序"
                          Height="32" VerticalAlignment="Center" Margin="10 0"
                          ItemsSource="{Binding SortOptions}"
                          SelectedItem="{Binding SortOption}">
                </ComboBox>
                <!--<Button Content="刷新" Margin="5 0 0 0" 
                        FontSize="14"
                        Command="{Binding RefreshCommandAsync}"
                        Width="120" Style="{StaticResource ButtonInfo}" Cursor="Hand"></Button>-->
                <CheckBox Content="列表" Margin="20 0  0 0" ToolTip="切换为列表视图" FontSize="14" IsChecked="{Binding IsListView}" Cursor="Hand"></CheckBox>

                <Label Background="Transparent" BorderThickness="0"
                       Cursor="Hand" ToolTip="刷新"
                       Margin="20 0 0 0">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                            <behaviors:InvokeCommandAction Command="{Binding RefreshCommandAsync}"></behaviors:InvokeCommandAction>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                    <Path Data="{StaticResource refresh}"
                          Stroke="{StaticResource PrimaryBrush}"
                          Stretch="Uniform"></Path>
                </Label>
            </StackPanel>
        </Border>

        <ListBox ScrollViewer.CanContentScroll="False"
                 Padding="0"
                 Grid.Row="1"
                 hc:BorderElement.CornerRadius="0"
                 ScrollViewer.IsDeferredScrollingEnabled="True"
                 ScrollViewer.VerticalScrollBarVisibility="Hidden"
                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                 PreviewMouseWheel="ListView_PreviewMouseWheel"
                 Background="#ddd"
                 ItemsSource="{Binding Urls,UpdateSourceTrigger=PropertyChanged}"
                 BorderThickness="0" BorderBrush="Transparent">
            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="SelectionChanged">
                    <behaviors:InvokeCommandAction Command="{Binding SelectFriendCommandAsync}"></behaviors:InvokeCommandAction>
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"></StackPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="IsSelected" Value="{Binding IsUrlSelected}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Cursor="Hand" Background="{TemplateBinding Background}" Margin="0 0 0 0" BorderThickness="0">
                                    <TextBlock VerticalAlignment="Center" Margin="3 0 0 0" FontSize="13.5" Text="{Binding NameDesc,StringFormat={}{0} &gt;}"></TextBlock>
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                            <behaviors:InvokeCommandAction Command="{Binding ClickUrlObjectCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"></Setter>
                            <Setter Property="Background" Value="#ddd"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="#888"></Setter>
                            <Setter Property="Background" Value="Transparent"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"></Setter>
                            <Setter Property="Background" Value="#ddd"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <hc:Card Grid.Row="2" BorderThickness="0" Margin="1" hc:BorderElement.CornerRadius="0" Name="container">
            <ScrollViewer Grid.Column="0" Grid.Row="2"
                          Grid.ColumnSpan="2"
                          ContextMenu="{StaticResource filemenu}"
                          RequestBringIntoView="ScrollViewer_RequestBringIntoView"
                          Background="Transparent" Visibility="{Binding HadSearchResult,Converter={StaticResource Boolean2VisibilityConverter}}">

                <Grid>
                    <ListBox ScrollViewer.CanContentScroll="False"
                             Name="gridListbox"
                             Visibility="{Binding IsListView,Converter={StaticResource Boolean2VisibilityReConverter}}"
                             Padding="0"
                             DragEnter="ListBox_DragEnter"
                             AllowDrop="True"
                             hc:BorderElement.CornerRadius="0"
                             ScrollViewer.IsDeferredScrollingEnabled="True"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                             PreviewMouseWheel="ListView_PreviewMouseWheel"
                             Background="Transparent"
                             SelectionMode="Multiple"
                             ItemsSource="{Binding FileObjViewModels,UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0" BorderBrush="Transparent">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Drop">
                                <behaviors:InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Width" Value="108" />
                                <Setter Property="Height" Value="130" />
                                <Setter Property="Margin" Value="5 5"></Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Cursor="Hand"
                                                    ContextMenu="{StaticResource fileitemmenu}"
                                                    Padding="0"
                                                    CornerRadius="3"
                                                    BorderThickness="0"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    Height="{TemplateBinding Height}"
                                                    Width="{TemplateBinding Width}"
                                                    Name="fileObjectDetail"
                                                    Background="{TemplateBinding Background}">
                                                <behaviors:Interaction.Triggers>
                                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                                        <behaviors:InvokeCommandAction Command="{Binding ClickFileObjectCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="MouseRightButtonDown">
                                                        <behaviors:InvokeCommandAction Command="{Binding RightClickFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="DragEnter">
                                                        <behaviors:InvokeCommandAction Command="{Binding DragEnterFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="DragLeave">
                                                        <behaviors:InvokeCommandAction Command="{Binding DragLeaveFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                </behaviors:Interaction.Triggers>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="15"></RowDefinition>
                                                        <RowDefinition Height="80"></RowDefinition>
                                                        <RowDefinition Height="*"></RowDefinition>
                                                    </Grid.RowDefinitions>
                                                    <CheckBox Height="20"
                                          Width="20"
                                          Grid.Row="0"
                                          IsEnabled="True"
                                          HorizontalAlignment="Left"
                                          IsChecked="{Binding IsSelected}"
                                          Visibility="{Binding IsSelected,Converter={StaticResource Boolean2VisibilityConverter}}"
                                          Margin="1 1 0 0"
                                          Style="{x:Null}"
                                          >

                                                    </CheckBox>
                                                    <hc:Gravatar Height="80" Width="70"
                                             Grid.Row="1"
                                             Name="icon"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Source="{Binding Icon,UpdateSourceTrigger=PropertyChanged}">
                                                    </hc:Gravatar>
                                                    <TextBlock Text="{Binding NameDesc}"
                                           Grid.Row="2"
                                           Cursor="Hand"
                                           ToolTip="{Binding Name}"
                                           Foreground="Black"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="13" 
                                           Visibility="{Binding IsRename,Converter={StaticResource Boolean2VisibilityReConverter}}">
                                                    </TextBlock>
                                                    <TextBox Text="{Binding Name}"
                                         ToolTip="{Binding Name}"
                                         Name="txtUserName"
                                         Grid.Row="2"
                                         Cursor="Hand"
                                         Foreground="Black"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         GotFocus="txtUserName_GotFocus"
                                         FontSize="13"
                                         Focusable="True"
                                         Margin="0 0 0 3"
                                         BorderThickness="1"
                                         Visibility="{Binding IsRename,Converter={StaticResource Boolean2VisibilityConverter}}">
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsFocus}" Value="True">
                                                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=txtUserName}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                        <behaviors:Interaction.Triggers>
                                                            <behaviors:EventTrigger EventName="LostFocus">
                                                                <behaviors:InvokeCommandAction Command="{Binding RenameTextSubmitCommandAsync}"></behaviors:InvokeCommandAction>
                                                            </behaviors:EventTrigger>
                                                        </behaviors:Interaction.Triggers>
                                                    </TextBox>

                                                    <Popup PopupAnimation="Fade"
                                                           Placement="Mouse"
                                                           Focusable="False"
                                                           HorizontalOffset="50"
                                                           Effect="{StaticResource EffectShadow5}"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding ElementName=icon,Path=IsMouseOver,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                                                        <Border Background="{StaticResource PrimaryBrush}"
                                                                CornerRadius="5"
                                                                Padding="5"
                                                                Effect="{StaticResource EffectShadow5}">
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock Text="{Binding Name}" Margin="0 2" TextDecorations="Underline"  FontSize="16" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" Text="{Binding CreateTime,StringFormat=创建时间 : {0},Converter={StaticResource UtcDateTimeToStringConverter}}" FontSize="14" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" Text="{Binding LastUpdateTime,StringFormat=修改时间 : {0},Converter={StaticResource UtcDateTimeToStringConverter}}" FontSize="14" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" 
                                                                           Visibility="{Binding IsFolder,Converter={StaticResource Boolean2VisibilityReConverter}}"
                                                                           Text="{Binding SizeText,StringFormat=文件大小 : {0}}" FontSize="14" Foreground="White"></TextBlock>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighlight}" Value="True">
                                        <Setter Property="Foreground" Value="White"></Setter>
                                        <Setter Property="Background" Value="#ddd"></Setter>
                                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlight}" Value="False">
                                        <Setter Property="Foreground" Value="White"></Setter>
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                        <Setter Property="BorderBrush" Value="#aaa"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <ListBox ScrollViewer.CanContentScroll="False"
                             Visibility="{Binding IsListView,Converter={StaticResource Boolean2VisibilityConverter}}"
                             Padding="0"
                             Margin="0 0 80 0"
                             DragEnter="ListBox_DragEnter"
                             AllowDrop="True"
                             hc:BorderElement.CornerRadius="0"
                             ScrollViewer.IsDeferredScrollingEnabled="True"
                             ScrollViewer.VerticalScrollBarVisibility="Visible"
                             PreviewMouseWheel="ListView_PreviewMouseWheel"
                             Background="Transparent"
                             SelectionMode="Multiple"
                             ItemsSource="{Binding FileObjViewModels,UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0" BorderBrush="Transparent">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Drop">
                                <behaviors:InvokeCommandAction Command="{Binding DropCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"></StackPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Height" Value="35" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border Cursor="Hand"
                                                    Padding="0"
                                                    ContextMenu="{StaticResource fileitemmenu}"
                                                    CornerRadius="0"
                                                    BorderThickness="0 0 0 0.4"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    Height="{TemplateBinding Height}"
                                                    Width="{TemplateBinding Width}"
                                                    Name="fileObjectDetail"
                                                    Background="{TemplateBinding Background}">
                                                <behaviors:Interaction.Triggers>
                                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                                        <behaviors:InvokeCommandAction Command="{Binding ClickFileObjectCommand}" PassEventArgsToCommand="True"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="MouseRightButtonDown">
                                                        <behaviors:InvokeCommandAction Command="{Binding RightClickFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="DragEnter">
                                                        <behaviors:InvokeCommandAction Command="{Binding DragEnterFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                    <behaviors:EventTrigger EventName="DragLeave">
                                                        <behaviors:InvokeCommandAction Command="{Binding DragLeaveFileObjectCommand}"></behaviors:InvokeCommandAction>
                                                    </behaviors:EventTrigger>
                                                </behaviors:Interaction.Triggers>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20"></ColumnDefinition>
                                                        <ColumnDefinition Width="30"></ColumnDefinition>
                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                        <ColumnDefinition Width="150"></ColumnDefinition>
                                                        <ColumnDefinition Width="100"></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <CheckBox Width="15"
                                                              Grid.Column="0"
                                                              IsEnabled="True"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              IsChecked="{Binding IsSelected}"
                                                              Visibility="{Binding IsSelected,Converter={StaticResource Boolean2VisibilityConverter}}"
                                                              Style="{x:Null}">

                                                    </CheckBox>
                                                    <hc:Gravatar Height="25" Width="25"
                                                                 Grid.Column="1"
                                                                 Name="icon"
                                                                 HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 Source="{Binding Icon,UpdateSourceTrigger=PropertyChanged}">
                                                    </hc:Gravatar>
                                                    <TextBlock Text="{Binding Name}"
                                                               Grid.Column="2"
                                                               Margin="10 0 0 0"
                                                               Cursor="Hand"
                                                               ToolTip="{Binding Name}"
                                                               Foreground="Black"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               FontSize="13" 
                                                               Visibility="{Binding IsRename,Converter={StaticResource Boolean2VisibilityReConverter}}">
                                                    </TextBlock>
                                                    <TextBox Text="{Binding Name}"
                                                             ToolTip="{Binding Name}"
                                                             Name="txtUserName"
                                                             Margin="10 0 0 0"
                                                             Grid.Column="2"
                                                             Cursor="Hand"
                                                             Foreground="Black"
                                                             HorizontalAlignment="Left"
                                                             VerticalAlignment="Center"
                                                             GotFocus="txtUserName_GotFocus"
                                                             FontSize="13"
                                                             Focusable="True"
                                                             BorderThickness="1"
                                                             Visibility="{Binding IsRename,Converter={StaticResource Boolean2VisibilityConverter}}">
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsFocus}" Value="True">
                                                                        <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=txtUserName}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                        <behaviors:Interaction.Triggers>
                                                            <behaviors:EventTrigger EventName="LostFocus">
                                                                <behaviors:InvokeCommandAction Command="{Binding RenameTextSubmitCommandAsync}"></behaviors:InvokeCommandAction>
                                                            </behaviors:EventTrigger>
                                                        </behaviors:Interaction.Triggers>
                                                    </TextBox>

                                                    <TextBlock Text="{Binding LastUpdateTime,Converter={StaticResource UtcDateTimeToStringConverter}}"
                                               Grid.Column="3"
                                               Foreground="#555"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               FontSize="13" >
                                                    </TextBlock>

                                                    <TextBlock Text="{Binding SizeText}"
                                                               Grid.Column="4"
                                                               Margin="20 0 0 0"
                                                               Foreground="#555"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               FontSize="13" >
                                                    </TextBlock>

                                                    <Popup PopupAnimation="Fade"
                                                           Placement="Mouse"
                                                           Focusable="False"
                                                           HorizontalOffset="50"
                                                           Effect="{StaticResource EffectShadow5}"
                                                           AllowsTransparency="True"
                                                           IsOpen="{Binding ElementName=icon,Path=IsMouseOver,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                                                        <Border Background="{StaticResource PrimaryBrush}"
                                                                CornerRadius="5"
                                                                Padding="5"
                                                                Effect="{StaticResource EffectShadow5}">
                                                            <StackPanel Orientation="Vertical">
                                                                <TextBlock Text="{Binding Name}" Margin="0 2" TextDecorations="Underline"  FontSize="16" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" Text="{Binding CreateTime,StringFormat=创建时间 : {0},Converter={StaticResource UtcDateTimeToStringConverter}}" FontSize="14" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" Text="{Binding LastUpdateTime,StringFormat=修改时间 : {0},Converter={StaticResource UtcDateTimeToStringConverter}}" FontSize="14" Foreground="White"></TextBlock>
                                                                <TextBlock Margin="0 2" 
                                                                           Visibility="{Binding IsFolder,Converter={StaticResource Boolean2VisibilityReConverter}}"
                                                                           Text="{Binding SizeText,StringFormat=文件大小 : {0}}" FontSize="14" Foreground="White"></TextBlock>
                                                            </StackPanel>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighlight}" Value="True">
                                        <Setter Property="Foreground" Value="White"></Setter>
                                        <Setter Property="Background" Value="#ddd"></Setter>
                                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighlight}" Value="False">
                                        <Setter Property="Foreground" Value="White"></Setter>
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                        <Setter Property="BorderBrush" Value="#aaa"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </ScrollViewer>
        </hc:Card>

        <Grid Grid.Row="3">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock Text="{Binding AllCount,StringFormat=文件总数: {0}}" HorizontalAlignment="Right" FontSize="13" 
                       Foreground="#555"
                           Margin="5 0 20 0"
                       VerticalAlignment="Center"></TextBlock>

                <TextBlock Text="{Binding SelectedCount,StringFormat=选中文件: {0}}" HorizontalAlignment="Right" FontSize="13" 
                       Foreground="#555"
                           Margin="5 0 10 0"
                       VerticalAlignment="Center"></TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
